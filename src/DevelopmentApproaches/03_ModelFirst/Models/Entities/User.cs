//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v4.2.1.3
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace ModelFirst.Models.Entities
{
   /// <summary>
   /// Таблица с инфо о пользователях
   /// </summary>
   [System.ComponentModel.Description("Таблица с инфо о пользователях")]
   public partial class User
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      public User()
      {
         Init();
      }

      /// <summary>
      /// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      /// </summary>
      public static User CreateUserUnsafe()
      {
         return new User();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="name">Имя пользователя</param>
      /// <param name="age">Возраст пользователя</param>
      public User(string name, int age) : this()
      {
         if (string.IsNullOrEmpty(name)) throw new ArgumentNullException(nameof(name));
         this.Name = name;

         this.Age = age;

      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="name">Имя пользователя</param>
      /// <param name="age">Возраст пользователя</param>
      public static User Create(string name, int age)
      {
         return new User(name, age);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Required
      /// Возраст пользователя
      /// </summary>
      [Required]
      [System.ComponentModel.Description("Возраст пользователя")]
      public int Age { get; set; }

      /// <summary>
      /// Identity, Indexed, Required
      /// ID
      /// </summary>
      [Key]
      [Required]
      [System.ComponentModel.Description("ID")]
      public Guid Id { get; set; }

      /// <summary>
      /// Required, Min length = 4, Max length = 50
      /// Имя пользователя
      /// </summary>
      [Required]
      [MinLength(4)]
      [MaxLength(50)]
      [StringLength(50)]
      [System.ComponentModel.Description("Имя пользователя")]
      public string Name { get; set; }

      partial void Init()
      {
          Name = "Noname";
          Age = 18;
      }

   }
}

